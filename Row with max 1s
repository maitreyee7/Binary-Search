class Solution {
  public:
  int low_bound(vector<int>& a, int k){
      int l=0,h=a.size()-1;
      int ans=-1;
      while(l<=h){
          int mid=(l+h)/2;
          if(a[mid]==k){
              ans=mid;
              h=mid-1;
          }
          else if(a[mid]>k){
              h=mid-1;
          }
          else{
            l=mid+1;
          }
      }
      return ans;
      
  }
  
    int rowWithMax1s(vector<vector<int> > &arr) {
       int maxi=-1;
       int ans=-1;
       int n= arr[0].size();
       for(int i=0;i<arr.size();i++){
          int l= low_bound(arr[i],1);
           if(l!=-1){
               int f=n-l;
               if(f>maxi){
                    maxi=max(maxi,f);
                    ans=i;
               }
             
       }
       }
       return ans;
       
    }
};
