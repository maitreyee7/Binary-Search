class Solution {
public:
    int func(vector<int> weights, int days, int mid){
        int cnt=0, day=1;
        for(int i=0;i<weights.size();i++){
            if(weights[i]>mid ){
                return -1;
            }
            if(weights[i]+cnt > mid){
                day++;
                cnt= weights[i];
            }
            else{
                cnt+=weights[i];
            }
        }
        
        return day<=days;
    }

    int shipWithinDays(vector<int>& weights, int days) {
        int l=*max_element(weights.begin(),weights.end()), h= accumulate(weights.begin(),weights.end(),0);
        int ans=INT_MAX;
        while(l<=h){
            int mid= l+ (h-l)/2;
            if(func(weights,days,mid)){
                ans=min(ans,mid);
                h=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return ans;
    }
};
