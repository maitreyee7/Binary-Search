 int func(vector<int> piles,int m,int h){
        int time=0;
        int n=piles.size();
        for(int i=0;i<n;i++){
            time+=ceil((double)piles[i] / (double)m);
            if(time>h){
                return -1;
            }
        }
        return time;
    }

     int minEatingSpeed(vector<int>& piles, int hr) {
       int l=1;
       int h = *max_element(piles.begin(), piles.end());
       int ans= h;
       while(l<=h){
        int mid= (l+h)/2;
        int hrs= func(piles,mid,hr);
        if(hrs<=hr && hrs>0){
            ans= min(ans,mid);
            h=mid-1;
        }
        else if(hrs==-1){
            l=mid+1;
        }
        else {
            l=mid+1;
        }
        
       }
       return ans;
     }
