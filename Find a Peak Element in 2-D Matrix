class Solution {
public:
    vector<int> findPeakGrid(vector<vector<int>>& mat) {
       
        int r=mat.size();
        int c=mat[0].size();
        int l=0, h=r-1;
        while(l<=h){
             int mid= (l+h)/2;
             int maxi=mat[mid][0];
            int tr=mid,tc=0;
            for(int i=1;i<c;i++){
                if(maxi<mat[mid][i]){
                    maxi=mat[mid][i];
                    tc=i;
                }
            }
            int top=-1,left=-1,right=-1,down=-1;
            if(tc>0){
                left= mat[tr][tc-1];
            }
            if(tc<c-1){
                right= mat[tr][tc+1];
            }
            if(tr>0){
                top=mat[tr-1][tc];
            }
            if(tr<r-1){
                down= mat[tr+1][tc];
            }
           
           if(mat[tr][tc]>top && mat[tr][tc]>down && mat[tr][tc]>left && mat[tr][tc]>right ){
            return {tr,tc};
           }
           else if(mat[tr][tc]<top){
            h=mid-1;
           }
           else{
            l=mid+1;
           }
        }
        return {0,0};
    }
};
